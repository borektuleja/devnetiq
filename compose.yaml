services:
  postgres:
    container_name: postgres
    environment:
      - POSTGRES_DB=devnetiq
      - POSTGRES_PASSWORD=devnetiq
      - POSTGRES_USER=devnetiq
    image: postgres:17-alpine
    ports:
      - 5432:5432
    restart: always
    volumes:
      - postgres-volume:/var/lib/postgresql/data

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    command: ["npm", "run", "start:dev"]
    container_name: api
    depends_on:
      - postgres
    develop:
      watch:
        - action: sync
          path: ./api/apps/api
          target: /usr/src/app/apps/api
        - action: sync
          path: ./api/libs
          target: /usr/src/app/libs
        - action: rebuild
          path: ./api/.env
          target: /usr/src/app/.env
        - action: rebuild
          path: ./api/package.json
          target: /usr/src/app/package.json
        - action: sync
          path: ./api/tsconfig.build.json
          target: /usr/src/app/tsconfig.build.json
        - action: sync
          path: ./api/tsconfig.json
          target: /usr/src/app/tsconfig.json
    environment:
      - DATABASE_HOST=postgres
    ports:
      - 3333:3333
  
  web:
    container_name: devnetiq-web
    build:
      context: ./web
      dockerfile: Dockerfile
    command: ["npm", "run", "dev"]
    depends_on:
      - api
    develop:
      watch:
        - action: sync
          path: ./web
          target: /usr/src/app
        - action: rebuild
          path: ./web/package.json
          target: /usr/src/app/package.json     
    ports:
      - 4444:4444   

networks:
  default:
    name: devnetiq-network

volumes:
  postgres-volume:
